[project]
name = "datacon2025hack"
version = "0.1.0"
description = "AL"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
readme = "README.md"
requires-python = ">=3.13"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

dependencies = [
    "polars>=0.20.0",
    "numpy>=1.24.0",
    "rdkit>=2023.9.1",
    "chembl-webresource-client>=0.10.8",
    "jupyter>=1.0.0",
    "plotly>=5.15.0",
    "kaleido>=0.2.1", # For plotly image export
    "tqdm>=4.65.0",
    "requests>=2.31.0",
    "pyarrow>=14.0.0", # Required for polars I/O operations
    "polars-ds>=0.10.0",
    "mordred[full]>=1.2.0",
    "padelpy>=0.1.16",
    "scikit-learn>=1.7.0",
    "torch>=2.7.1",
    "torch-geometric>=2.5.0",
    "xgboost>=2.0.0",
    "lightgbm>=4.0.0",
    "transformers>=4.30.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "pandas>=2.0.0",
    "joblib>=1.3.0",
    "loguru>=0.7.3",
    "biopython>=1.85",
    "selfies>=2.2.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.4.0",
]

[tool.ruff]
lint.select = ["ALL"]

lint.ignore = ["RUF002", "RUF003", "TRY300","BLE001","TRY400","PTH118","PTH112","PTH107","D100","G004","RUF010","ISC001","COM812","INP001","RUF001"]

lint.unfixable = ["RUF003","RUF001","RUF010", "G004","TRY003","EM101","E712","ERA001", "RET504"]

line-length = 130

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".idea",
    "__pycahe__",
    "tests",
    "test"
]

# Assume Python 3.13.
target-version = "py313"
# fixable = ["Q"]


[tool.ruff.lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 5.
max-complexity = 50

[tool.ruff.lint.pylint]
max-branches = 50
max-statements = 150
max-args = 10

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
docstring-code-format = true

# Use single quotes for non-triple-quoted strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
